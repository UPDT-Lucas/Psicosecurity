/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.Employees;

import DataBase.get_all_procs;
import DataBase.get_procs;
import Models.employee;
import Models.status;
import Utilities.excel_report;
import Utilities.extra_methods;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Utilities.mail_sender;
import java.io.IOException;
import javax.mail.MessagingException;

/**
 * 
 * @author Lucas A. Oviedo Castro 
 * <p>
 * Last Modify Date: 06/02/2023.
 * By: Lucas A. Oviedo Castro 
 * <p>
 * JPanel with the View to check all the employees basic information.
 */
public class showEmp extends javax.swing.JPanel {
        DefaultTableModel dtm = new DefaultTableModel();
        ArrayList<employee> all_employees;
        ArrayList<status> allStatus;
        String statusName;
        
    /**
     * View Constructor
     * @throws MessagingException if occurs an error with the transport
     * @throws ClassNotFoundException if the class is not found
     * @throws SQLException if there is a problem during data collection
     */
    public showEmp() throws SQLException, ClassNotFoundException, MessagingException {
        initComponents();
        
        statusCombo.removeAllItems();
        
        all_employees = get_all_procs.get_all_employees();
        allStatus = get_all_procs.get_all_status();
        
        statusCombo.addItem("Sin filtro");
        for(status st : allStatus){
            statusCombo.addItem(st.getName_status());
        }
        
        String[] header = new String[]{"CÃ©dula", "1er Nombre", "2do Nombre", "1er Apellido", "2do Apellido"};
        dtm.setColumnIdentifiers(header);
        empTable.setModel(dtm);
      
        updateTable(all_employees);
        
        if(get_procs.get_employee_to_count_advice().isEmpty()){
            pendingImage.setVisible(false);
        }else{
            verifiedImage.setVisible(false);
        }
    }

    /**
     * Update the employees table. Filter by the actual selected status.
     * @param filteredEmp ArrayList of employees - Filter the employees depending on the status
     */
    private void updateTable(ArrayList<employee> filteredEmp){
        extra_methods.clearTable(empTable, dtm);
       
        for(employee emp : filteredEmp){
            dtm.addRow(new Object[]{
                emp.getId_card(), emp.getFirst_name(), emp.getSecond_name(), emp.getFirst_surname(), emp.getSecond_surname()
            });
        }
    }
    
    /**
     * Get the id employee by the table selection
     * @return the selected id employee
     */
    private int getSelectedIdEmp(){
        int fila = empTable.getSelectedRow();
        int key = (int) empTable.getValueAt(fila,0);
        int idEmp = 0;
        for (employee emp : all_employees) {
            if (emp.getId_card() == key) {
                idEmp = emp.getId_employee();
            }
         }
        return idEmp;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        content = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        empTable = new javax.swing.JTable();
        searchField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        statusCombo = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        contactImage = new Utilities.image_avatar();
        enterpriseImage = new Utilities.image_avatar();
        verifiedImage = new Utilities.image_avatar();
        pendingImage = new Utilities.image_avatar();
        mailImage = new Utilities.image_avatar();
        excelImage = new Utilities.image_avatar();
        infoImage = new Utilities.image_avatar();
        salaryImage = new Utilities.image_avatar();

        setPreferredSize(new java.awt.Dimension(1260, 700));

        content.setBackground(new java.awt.Color(255, 255, 255));
        content.setPreferredSize(new java.awt.Dimension(1260, 700));
        content.setRequestFocusEnabled(false);

        empTable  = new javax.swing.JTable(){
            public boolean isCellEditable(int row,int column){
                for(int i = 0; i < empTable.getRowCount(); i ++){
                    if(row < 0){
                        return true;
                    }
                }
                return false;
            }
        };
        empTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        empTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        empTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        empTable.setInheritsPopupMenu(true);
        empTable.setShowGrid(true);
        empTable.getTableHeader().setReorderingAllowed(false);
        empTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                empTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(empTable);

        searchField.setBorder(null);
        searchField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                searchFieldInputMethodTextChanged(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchFieldKeyTyped(evt);
            }
        });

        jLabel1.setText("Buscar por nombre");

        statusCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        statusCombo.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                statusComboComponentRemoved(evt);
            }
        });
        statusCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                statusComboItemStateChanged(evt);
            }
        });
        statusCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                statusComboMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                statusComboMousePressed(evt);
            }
        });

        contactImage.setBorderSize(0);
        contactImage.setBorderSpace(2);
        contactImage.setFocusCycleRoot(true);
        contactImage.setGradientColor1(new java.awt.Color(153, 0, 153));
        contactImage.setGradientColor2(new java.awt.Color(102, 102, 255));
        contactImage.setImage(new javax.swing.ImageIcon(getClass().getResource("/images/optionsPerPanel/showEmp/contactEmployee.png"))); // NOI18N
        contactImage.setInheritsPopupMenu(true);
        contactImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contactImageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                contactImageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                contactImageMouseExited(evt);
            }
        });

        enterpriseImage.setBorderSize(0);
        enterpriseImage.setBorderSpace(2);
        enterpriseImage.setFocusCycleRoot(true);
        enterpriseImage.setGradientColor1(new java.awt.Color(153, 0, 153));
        enterpriseImage.setGradientColor2(new java.awt.Color(102, 102, 255));
        enterpriseImage.setImage(new javax.swing.ImageIcon(getClass().getResource("/images/optionsPerPanel/showEmp/enterpriseEmployee.png"))); // NOI18N
        enterpriseImage.setInheritsPopupMenu(true);
        enterpriseImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enterpriseImageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                enterpriseImageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                enterpriseImageMouseExited(evt);
            }
        });

        verifiedImage.setBorderSize(0);
        verifiedImage.setBorderSpace(3);
        verifiedImage.setFocusCycleRoot(true);
        verifiedImage.setGradientColor1(new java.awt.Color(153, 0, 153));
        verifiedImage.setGradientColor2(new java.awt.Color(102, 102, 255));
        verifiedImage.setImage(new javax.swing.ImageIcon(getClass().getResource("/images/optionsPerPanel/showEmp/verifiedImage.png"))); // NOI18N
        verifiedImage.setInheritsPopupMenu(true);
        verifiedImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                verifiedImageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                verifiedImageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                verifiedImageMouseExited(evt);
            }
        });

        pendingImage.setBorderSize(0);
        pendingImage.setBorderSpace(3);
        pendingImage.setFocusCycleRoot(true);
        pendingImage.setGradientColor1(new java.awt.Color(153, 0, 153));
        pendingImage.setGradientColor2(new java.awt.Color(102, 102, 255));
        pendingImage.setImage(new javax.swing.ImageIcon(getClass().getResource("/images/optionsPerPanel/showEmp/pendingImage.png"))); // NOI18N
        pendingImage.setInheritsPopupMenu(true);
        pendingImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pendingImageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pendingImageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pendingImageMouseExited(evt);
            }
        });

        mailImage.setBorderSize(0);
        mailImage.setBorderSpace(3);
        mailImage.setFocusCycleRoot(true);
        mailImage.setGradientColor1(new java.awt.Color(153, 0, 153));
        mailImage.setGradientColor2(new java.awt.Color(102, 102, 255));
        mailImage.setImage(new javax.swing.ImageIcon(getClass().getResource("/images/optionsPerPanel/showEmp/mailImage.png"))); // NOI18N
        mailImage.setInheritsPopupMenu(true);
        mailImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mailImageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mailImageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mailImageMouseExited(evt);
            }
        });

        excelImage.setBorderSize(0);
        excelImage.setBorderSpace(0);
        excelImage.setFocusCycleRoot(true);
        excelImage.setGradientColor1(new java.awt.Color(153, 0, 153));
        excelImage.setGradientColor2(new java.awt.Color(102, 102, 255));
        excelImage.setImage(new javax.swing.ImageIcon(getClass().getResource("/images/optionsPerPanel/excelImage.png"))); // NOI18N
        excelImage.setInheritsPopupMenu(true);
        excelImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                excelImageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                excelImageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                excelImageMouseExited(evt);
            }
        });

        infoImage.setBorderSize(0);
        infoImage.setBorderSpace(2);
        infoImage.setFocusCycleRoot(true);
        infoImage.setGradientColor1(new java.awt.Color(153, 0, 153));
        infoImage.setGradientColor2(new java.awt.Color(102, 102, 255));
        infoImage.setImage(new javax.swing.ImageIcon(getClass().getResource("/images/optionsPerPanel/showEmp/personalEmployee.png"))); // NOI18N
        infoImage.setInheritsPopupMenu(true);
        infoImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                infoImageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                infoImageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                infoImageMouseExited(evt);
            }
        });

        salaryImage.setBorderSize(0);
        salaryImage.setBorderSpace(3);
        salaryImage.setFocusCycleRoot(true);
        salaryImage.setGradientColor1(new java.awt.Color(153, 0, 153));
        salaryImage.setGradientColor2(new java.awt.Color(102, 102, 255));
        salaryImage.setImage(new javax.swing.ImageIcon(getClass().getResource("/images/optionsPerPanel/showEmp/salaryEmployee.png"))); // NOI18N
        salaryImage.setInheritsPopupMenu(true);
        salaryImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salaryImageMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                salaryImageMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                salaryImageMouseExited(evt);
            }
        });

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(contentLayout.createSequentialGroup()
                        .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(contentLayout.createSequentialGroup()
                                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(620, 620, 620)
                                .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1020, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(80, 80, 80)
                        .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mailImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(excelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(infoImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enterpriseImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(salaryImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(verifiedImage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pendingImage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contentLayout.createSequentialGroup()
                        .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(contentLayout.createSequentialGroup()
                                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(contentLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(contentLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(mailImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(excelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(infoImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(enterpriseImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(contactImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(salaryImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(contentLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(verifiedImage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pendingImage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyTyped
      
    }//GEN-LAST:event_searchFieldKeyTyped

    private void searchFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_searchFieldInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldInputMethodTextChanged

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
            try {
               int idStatus = get_procs.get_status_by_name(statusName).getId_status();
               if(idStatus == 0){
                   all_employees = get_all_procs.filtered_all_employees(searchField.getText());
               }else{
                   all_employees = get_procs.filtered_employees(searchField.getText(), idStatus);
               }
              updateTable(all_employees);
            } catch (SQLException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            }     
    }//GEN-LAST:event_searchFieldKeyReleased

    private void empTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empTableMouseClicked

    }//GEN-LAST:event_empTableMouseClicked

    private void statusComboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusComboMouseClicked

    }//GEN-LAST:event_statusComboMouseClicked

    private void statusComboComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_statusComboComponentRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_statusComboComponentRemoved

    private void statusComboMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusComboMousePressed

    }//GEN-LAST:event_statusComboMousePressed

    private void statusComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_statusComboItemStateChanged
            try {
                statusName = (String) statusCombo.getSelectedItem();
                if(statusName == null || statusName.equals("Sin filtro")){
                    all_employees = get_all_procs.get_all_employees();
                    updateTable(all_employees);
                }else{
                    int idStatus = get_procs.get_status_by_name(statusName).getId_status();
                    all_employees = get_procs.get_employee_by_status(idStatus);
                    updateTable(all_employees);
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            }     
    }//GEN-LAST:event_statusComboItemStateChanged

    private void infoImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoImageMouseClicked
        if(!empTable.getSelectionModel().isSelectionEmpty()){
            try {
                int idEmp = getSelectedIdEmp();
                employee selectedEmp = get_procs.get_employee(idEmp);
                personalInfo p = new personalInfo(selectedEmp);
                extra_methods.showPanel(p,content);
            } catch (SQLException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(content, "Debe seleccionar una persona", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_infoImageMouseClicked

    private void infoImageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoImageMouseEntered
        extra_methods.showSelectedOption(infoImage, 1135, 240);
    }//GEN-LAST:event_infoImageMouseEntered

    private void infoImageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoImageMouseExited
        extra_methods.resetSelectedOption(infoImage, 1140, 240);
    }//GEN-LAST:event_infoImageMouseExited

    private void contactImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contactImageMouseClicked
        if(!empTable.getSelectionModel().isSelectionEmpty()){
            try {
                int idEmp = getSelectedIdEmp();
                employee selectedEmp = get_procs.get_employee(idEmp);
                contactInfo p = new contactInfo(selectedEmp);
                extra_methods.showPanel(p, content);
            } catch (SQLException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
           JOptionPane.showMessageDialog(content, "Debe seleccionar una persona", "ERROR", JOptionPane.ERROR_MESSAGE);
        }        
    }//GEN-LAST:event_contactImageMouseClicked

    private void contactImageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contactImageMouseEntered
        extra_methods.showSelectedOption(contactImage, 1135, 380);
    }//GEN-LAST:event_contactImageMouseEntered

    private void contactImageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contactImageMouseExited
        extra_methods.resetSelectedOption(contactImage, 1140, 380);
    }//GEN-LAST:event_contactImageMouseExited

    private void enterpriseImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterpriseImageMouseClicked
        if(!empTable.getSelectionModel().isSelectionEmpty()){
            try {
                int idEmp = getSelectedIdEmp();
                employee selectedEmp = get_procs.get_employee(idEmp);
                companyInfo p = new companyInfo(selectedEmp);
                extra_methods.showPanel(p, content);
            } catch (SQLException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(content, "Debe seleccionar una persona", "ERROR", JOptionPane.ERROR_MESSAGE);
        }  
    }//GEN-LAST:event_enterpriseImageMouseClicked

    private void enterpriseImageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterpriseImageMouseEntered
        extra_methods.showSelectedOption(enterpriseImage, 1135, 310);
    }//GEN-LAST:event_enterpriseImageMouseEntered

    private void enterpriseImageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterpriseImageMouseExited
        extra_methods.resetSelectedOption(enterpriseImage, 1140, 310);
    }//GEN-LAST:event_enterpriseImageMouseExited

    private void salaryImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salaryImageMouseClicked
        if(!empTable.getSelectionModel().isSelectionEmpty()){
            try {
                int idEmp = getSelectedIdEmp();
                employee selectedEmp = get_procs.get_employee(idEmp);
                salaryInfo p = new salaryInfo(selectedEmp);
                extra_methods.showPanel(p, content);
                
            } catch (SQLException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(content, "Debe seleccionar una persona", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_salaryImageMouseClicked

    private void salaryImageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salaryImageMouseEntered
        extra_methods.showSelectedOption(salaryImage, 1135, 450);
    }//GEN-LAST:event_salaryImageMouseEntered

    private void salaryImageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salaryImageMouseExited
        extra_methods.resetSelectedOption(salaryImage, 1140, 450);
    }//GEN-LAST:event_salaryImageMouseExited

    private void excelImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_excelImageMouseClicked
            try {
                if(JOptionPane.showConfirmDialog(content, "Se va a exportar una lista de empleados en formato xlsx.\nÂ¿Desea continuar?",
                        "Aviso Sobre Lista de Empleados", JOptionPane.YES_NO_OPTION) == 0){
                    int[] rows = empTable.getSelectedRows();
                    ArrayList<employee> employees = new ArrayList<employee>();

                    if(rows.length != 0){
                        for(int i = 0; i < rows.length; i++){
                            try {
                                int idCard = (int) empTable.getValueAt(rows[i], 0);
                                employee selectedEmp = get_procs.get_employee_by_card(idCard);
                                employees.add(selectedEmp);

                            } catch (SQLException ex) {
                                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (ClassNotFoundException ex) {
                                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                        if(excel_report.escribir_reporte(employees)){
                            JOptionPane.showMessageDialog(content, "Se escribiÃ³ el documento correctamente" ,"Excel Finalizado", JOptionPane.INFORMATION_MESSAGE);
                        }
                      }else{ 
                        if(excel_report.escribir_reporte(get_all_procs.get_all_employees())){
                               JOptionPane.showMessageDialog(content, "Se escribiÃ³ el documento correctamente" ,"Excel Finalizado", JOptionPane.INFORMATION_MESSAGE);
                           }
                        }   
                    }
            } catch (IOException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            }
            
    }//GEN-LAST:event_excelImageMouseClicked

    private void excelImageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_excelImageMouseEntered
        extra_methods.showSelectedOption(excelImage, 1135, 120);
    }//GEN-LAST:event_excelImageMouseEntered

    private void excelImageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_excelImageMouseExited
        extra_methods.resetSelectedOption(excelImage, 1140, 120);
    }//GEN-LAST:event_excelImageMouseExited

    private void mailImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mailImageMouseClicked
            try {
                if(!get_procs.get_employee_to_count_advice().isEmpty()){
                    mailsFrame p = new mailsFrame(get_procs.get_employee_to_count_advice());
                    p.setSize(700,400);
                    p.setVisible(true);
                }else{
                    JOptionPane.showMessageDialog(content, "Actualmente no hay empleados con 12 o mÃ¡s dÃ­as de vacaciones acumulados", "No se van a enviar correos", JOptionPane.INFORMATION_MESSAGE);
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(showEmp.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_mailImageMouseClicked

    private void mailImageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mailImageMouseEntered
        extra_methods.showSelectedOption(mailImage, 1135, 50);
    }//GEN-LAST:event_mailImageMouseEntered

    private void mailImageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mailImageMouseExited
       extra_methods.resetSelectedOption(mailImage, 1140, 50);
    }//GEN-LAST:event_mailImageMouseExited

    private void pendingImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pendingImageMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_pendingImageMouseClicked

    private void pendingImageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pendingImageMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_pendingImageMouseEntered

    private void pendingImageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pendingImageMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_pendingImageMouseExited

    private void verifiedImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_verifiedImageMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_verifiedImageMouseClicked

    private void verifiedImageMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_verifiedImageMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_verifiedImageMouseEntered

    private void verifiedImageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_verifiedImageMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_verifiedImageMouseExited

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Utilities.image_avatar contactImage;
    private javax.swing.JPanel content;
    private javax.swing.JTable empTable;
    private Utilities.image_avatar enterpriseImage;
    private Utilities.image_avatar excelImage;
    private Utilities.image_avatar infoImage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private Utilities.image_avatar mailImage;
    private Utilities.image_avatar pendingImage;
    private Utilities.image_avatar salaryImage;
    private javax.swing.JTextField searchField;
    private javax.swing.JComboBox<String> statusCombo;
    private Utilities.image_avatar verifiedImage;
    // End of variables declaration//GEN-END:variables
}
